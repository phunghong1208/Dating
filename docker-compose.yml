version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: heartlink_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: $DB_USER
      MONGO_INITDB_ROOT_PASSWORD: $DB_PASS
      MONGO_INITDB_DATABASE: $DB_NAME
    volumes:
      - mongodb_data:/data/db
    networks:
      - heartlink_network

  # App Service - Port 3001
  app-service:
    build:
      context: ./app-service
      dockerfile: Dockerfile
    container_name: heartlink_app_service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
    depends_on:
      - mongodb
    networks:
      - heartlink_network
    volumes:
      - ./app-service:/app
      - /app/node_modules

  # Chat Service - Port 3002
  chat-service:
    build:
      context: ./chat-service
      dockerfile: Dockerfile
    container_name: heartlink_chat_service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
    depends_on:
      - mongodb
    networks:
      - heartlink_network
    volumes:
      - ./chat-service:/app
      - /app/node_modules

  # Admin Service - Port 3003
  admin-service:
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    container_name: heartlink_admin_service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
    depends_on:
      - mongodb
    networks:
      - heartlink_network
    volumes:
      - ./admin-service:/app
      - /app/node_modules

networks:
  heartlink_network:
    driver: bridge

volumes:
  mongodb_data: 